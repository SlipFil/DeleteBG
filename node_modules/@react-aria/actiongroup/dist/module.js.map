{"mappings":"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","sources":["packages/@react-aria/actiongroup/src/index.ts","packages/@react-aria/actiongroup/src/useActionGroup.ts","packages/@react-aria/actiongroup/src/useActionGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useActionGroup';\nexport * from './useActionGroupItem';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaActionGroupProps} from '@react-types/actiongroup';\nimport {createFocusManager} from '@react-aria/focus';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {Orientation} from '@react-types/shared';\nimport {useLocale} from '@react-aria/i18n';\n\nconst BUTTON_GROUP_ROLES = {\n  'none': 'toolbar',\n  'single': 'radiogroup',\n  'multiple': 'toolbar'\n};\n\nexport interface ActionGroupAria {\n  actionGroupProps: HTMLAttributes<HTMLElement>\n}\n\nexport function useActionGroup<T>(props: AriaActionGroupProps<T>, state: ListState<T>, ref: RefObject<HTMLElement>): ActionGroupAria {\n  let {\n    isDisabled,\n    orientation = 'horizontal' as Orientation\n  } = props;\n  let allKeys = [...state.collection.getKeys()];\n  if (!allKeys.some(key => !state.disabledKeys.has(key))) {\n    isDisabled = true;\n  }\n\n  let {direction} = useLocale();\n  let focusManager = createFocusManager(ref);\n  let flipDirection = direction === 'rtl' && orientation === 'horizontal';\n  let onKeyDown = (e) => {\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowRight' && flipDirection) {\n          focusManager.focusPrevious({wrap: true});\n        } else {\n          focusManager.focusNext({wrap: true});\n        }\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowLeft' && flipDirection) {\n          focusManager.focusNext({wrap: true});\n        } else {\n          focusManager.focusPrevious({wrap: true});\n        }\n        break;\n    }\n  };\n\n  let role = BUTTON_GROUP_ROLES[state.selectionManager.selectionMode];\n  return {\n    actionGroupProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      'aria-orientation': role === 'toolbar' ? orientation : null,\n      'aria-disabled': isDisabled,\n      onKeyDown\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, Key, RefObject, useEffect, useRef} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps} from '@react-aria/interactions';\n\ninterface ActionGroupItemProps {\n  key: Key\n}\n\ninterface ActionGroupItemAria {\n  buttonProps: HTMLAttributes<HTMLElement> & PressProps\n}\n\nconst BUTTON_ROLES = {\n  'none': null,\n  'single': 'radio',\n  'multiple': 'checkbox'\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useActionGroupItem<T>(props: ActionGroupItemProps, state: ListState<T>, ref?: RefObject<HTMLElement>): ActionGroupItemAria {\n  let selectionMode = state.selectionManager.selectionMode;\n  let buttonProps = {\n    role: BUTTON_ROLES[selectionMode]\n  };\n\n  if (selectionMode !== 'none') {\n    let isSelected = state.selectionManager.isSelected(props.key);\n    buttonProps['aria-checked'] = isSelected;\n  }\n\n  let isFocused = props.key === state.selectionManager.focusedKey;\n  let lastRender = useRef({isFocused, state});\n  lastRender.current = {isFocused, state};\n\n  // If the focused item is removed from the DOM, reset the focused key to null.\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (lastRender.current.isFocused) {\n        lastRender.current.state.selectionManager.setFocusedKey(null);\n      }\n    };\n  }, []);\n\n  return {\n    buttonProps: mergeProps(buttonProps, {\n      tabIndex: isFocused || state.selectionManager.focusedKey == null ? 0 : -1,\n      onFocus() {\n        state.selectionManager.setFocusedKey(props.key);\n      },\n      onPress() {\n        state.selectionManager.select(props.key);\n      }\n    })\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}