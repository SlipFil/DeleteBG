{"mappings":"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","sources":["packages/@react-aria/grid/src/index.ts","packages/@react-aria/grid/src/GridKeyboardDelegate.ts","packages/@react-aria/grid/src/useGrid.ts","packages/@react-aria/grid/src/utils.ts","packages/@react-aria/grid/intl/*.js","packages/@react-aria/grid/intl/ar-AE.json","packages/@react-aria/grid/intl/bg-BG.json","packages/@react-aria/grid/intl/cs-CZ.json","packages/@react-aria/grid/intl/da-DK.json","packages/@react-aria/grid/intl/de-DE.json","packages/@react-aria/grid/intl/el-GR.json","packages/@react-aria/grid/intl/en-US.json","packages/@react-aria/grid/intl/es-ES.json","packages/@react-aria/grid/intl/et-EE.json","packages/@react-aria/grid/intl/fi-FI.json","packages/@react-aria/grid/intl/fr-FR.json","packages/@react-aria/grid/intl/he-IL.json","packages/@react-aria/grid/intl/hr-HR.json","packages/@react-aria/grid/intl/hu-HU.json","packages/@react-aria/grid/intl/it-IT.json","packages/@react-aria/grid/intl/ja-JP.json","packages/@react-aria/grid/intl/ko-KR.json","packages/@react-aria/grid/intl/lt-LT.json","packages/@react-aria/grid/intl/lv-LV.json","packages/@react-aria/grid/intl/nb-NO.json","packages/@react-aria/grid/intl/nl-NL.json","packages/@react-aria/grid/intl/pl-PL.json","packages/@react-aria/grid/intl/pt-BR.json","packages/@react-aria/grid/intl/pt-PT.json","packages/@react-aria/grid/intl/ro-RO.json","packages/@react-aria/grid/intl/ru-RU.json","packages/@react-aria/grid/intl/sk-SK.json","packages/@react-aria/grid/intl/sl-SI.json","packages/@react-aria/grid/intl/sr-SP.json","packages/@react-aria/grid/intl/sv-SE.json","packages/@react-aria/grid/intl/tr-TR.json","packages/@react-aria/grid/intl/uk-UA.json","packages/@react-aria/grid/intl/zh-CN.json","packages/@react-aria/grid/intl/zh-TW.json","packages/@react-aria/grid/src/useHighlightSelectionDescription.ts","packages/@react-aria/grid/src/useGridRowGroup.ts","packages/@react-aria/grid/src/useGridRow.ts","packages/@react-aria/grid/src/useGridCell.ts","packages/@react-aria/grid/src/useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './GridKeyboardDelegate';\nexport * from './useGrid';\nexport * from './useGridRowGroup';\nexport * from './useGridRow';\nexport * from './useGridCell';\nexport * from './useGridSelectionCheckbox';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaLabelingProps, DOMProps, KeyboardDelegate, Selection} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId, useUpdateEffect} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, Key, RefObject, useMemo, useRef} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useCollator, useLocale, useMessageFormatter} from '@react-aria/i18n';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    getRowText = (key) => state.collection.getItem(key)?.textValue,\n    scrollRef,\n    onRowAction,\n    onCellAction\n  } = props;\n  let formatMessage = useMessageFormatter(intlMessages);\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId();\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: HTMLAttributes<HTMLElement> = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(formatMessage('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(formatMessage('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(formatMessage('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? formatMessage('selectedAll')\n          : formatMessage('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n\n  return {\n    gridProps\n  };\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useMemo} from 'react';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface UseHighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: UseHighlightSelectionDescriptionProps): AriaLabelingProps {\n  let formatMessage = useMessageFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = formatMessage('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, formatMessage, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes} from 'react';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {Node} from '@react-types/shared';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: HTMLAttributes<HTMLElement>,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<HTMLElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: HTMLAttributes<HTMLElement> = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {Node as RSNode} from '@react-types/shared';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: RSNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\ninterface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: HTMLAttributes<HTMLElement>,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<HTMLElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as HTMLElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDown = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as HTMLElement\n          : walker.previousNode() as HTMLElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as HTMLElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as HTMLElement\n          : walker.nextNode() as HTMLElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as HTMLElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as HTMLElement)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: HTMLAttributes<HTMLElement> = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDown,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = node.index + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: HTMLElement;\n  let last: HTMLElement;\n  do {\n    last = walker.lastChild() as HTMLElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface SelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\ninterface SelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: SelectionCheckboxProps, state: GridState<T, C>): SelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = state.disabledKeys.has(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const formatMessage = useMessageFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': formatMessage('select'),\n      isSelected,\n      isDisabled: isDisabled || manager.selectionMode === 'none',\n      onChange\n    }\n  };\n}\n"],"names":[],"version":3,"file":"main.js.map"}