{"mappings":";;;;;;;;;;;;;SC8BgB,yCAAc,CAAC,KAA2B,EAAmB,CAAC;IAC5E,GAAG,CAAC,CAAC,QACH,KAAK,GAAG,CAAC,aACT,QAAQ,GAAG,CAAC,aACZ,QAAQ,GAAG,GAAG,eACd,UAAU,oBACV,eAAe,kBACf,aAAa,GAAG,CAAC;QACf,KAAK,EAAE,CAAS;IAClB,CAAC,EACH,CAAC,GAAG,KAAK;IAET,GAAG,CAAC,QAAQ,GAAG,qBAAc,CAAC,KAAK,EAAE,CAAC;QAAA,SAAS,EAAE,IAAI;IAAA,CAAC;IACtD,GAAG,CAAC,CAAC,aAAA,UAAU,eAAE,UAAU,EAAA,CAAC,GAAG,eAAQ,CAAC,CAAC;WACpC,KAAK;QACR,EAAkD,AAAlD,gDAAkD;QAClD,EAA6C,AAA7C,2CAA6C;QAC7C,gBAAgB,EAAE,CAAM;IAC1B,CAAC;IAED,KAAK,GAAG,YAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ;IACvC,GAAG,CAAC,UAAU,IAAI,KAAK,GAAG,QAAQ,KAAK,QAAQ,GAAG,QAAQ;IAC1D,GAAG,CAAC,SAAS,GAAG,yBAAkB,CAAC,aAAa;IAEhD,EAAE,GAAG,eAAe,KAAK,UAAU,EAAE,CAAC;QACpC,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC,KAAK,KAAK,CAAS,WAAG,UAAU,GAAG,KAAK;QAC1E,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,aAAa;IAC7C,CAAC;IAED,MAAM,CAAC,CAAC;QACN,gBAAgB,EAAE,iBAAU,CAAC,QAAQ,EAAE,CAAC;eACnC,UAAU;YACb,CAAe,gBAAE,eAAe,GAAG,SAAS,GAAG,KAAK;YACpD,CAAe,gBAAE,QAAQ;YACzB,CAAe,gBAAE,QAAQ;YACzB,CAAgB,iBAAE,eAAe,GAAG,SAAS,GAAG,UAAU;YAC1D,IAAI,EAAE,CAAa;QACrB,CAAC;oBACD,UAAU;IACZ,CAAC;AACH,CAAC","sources":["packages/@react-aria/progress/src/index.ts","packages/@react-aria/progress/src/useProgressBar.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useProgressBar';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaProgressBarProps} from '@react-types/progress';\nimport {clamp, filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes} from 'react';\nimport {useLabel} from '@react-aria/label';\nimport {useNumberFormatter} from '@react-aria/i18n';\n\ninterface ProgressBarAria {\n  /** Props for the progress bar container element. */\n  progressBarProps: HTMLAttributes<HTMLElement>,\n  /** Props for the progress bar's visual label element (if any). */\n  labelProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a progress bar component.\n * Progress bars show either determinate or indeterminate progress of an operation\n * over time.\n */\nexport function useProgressBar(props: AriaProgressBarProps): ProgressBarAria {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel,\n    isIndeterminate,\n    formatOptions = {\n      style: 'percent'\n    }\n  } = props;\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  value = clamp(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = useNumberFormatter(formatOptions);\n\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === 'percent' ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n\n  return {\n    progressBarProps: mergeProps(domProps, {\n      ...fieldProps,\n      'aria-valuenow': isIndeterminate ? undefined : value,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-valuetext': isIndeterminate ? undefined : valueLabel as string,\n      role: 'progressbar'\n    }),\n    labelProps\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}