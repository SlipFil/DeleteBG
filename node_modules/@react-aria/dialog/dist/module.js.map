{"mappings":";;;;;;;;;;;;;SC6BgB,yCAAS,CAAC,KAAsB,EAAE,GAA2B,EAAc,CAAC;IAC1F,GAAG,CAAC,CAAC,OAAA,IAAI,GAAG,CAAQ,SAAA,CAAC,GAAG,KAAK;IAC7B,GAAG,CAAC,OAAO,GAAG,gBAAS;IACvB,OAAO,GAAG,KAAK,CAAC,CAAY,eAAI,SAAS,GAAG,OAAO;IAEnD,EAA+E,AAA/E,6EAA+E;IAC/E,gBAAS,KAAO,CAAC;QACf,EAAE,EAAE,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC;YACjE,kBAAW,CAAC,GAAG,CAAC,OAAO;YAEvB,EAAiE,AAAjE,+DAAiE;YACjE,EAAqE,AAArE,mEAAqE;YACrE,EAAmE,AAAnE,iEAAmE;YACnE,GAAG,CAAC,OAAO,GAAG,UAAU,KAAO,CAAC;gBAC9B,EAAE,EAAE,QAAQ,CAAC,aAAa,KAAK,GAAG,CAAC,OAAO,EAAE,CAAC;oBAC3C,GAAG,CAAC,OAAO,CAAC,IAAI;oBAChB,kBAAW,CAAC,GAAG,CAAC,OAAO;gBACzB,CAAC;YACH,CAAC,EAAE,GAAG;YAEN,MAAM,KAAO,CAAC;gBACZ,YAAY,CAAC,OAAO;YACtB,CAAC;QACH,CAAC;IACH,CAAC,EAAE,CAAC;QAAA,GAAG;IAAA,CAAC;IAER,EAAsG,AAAtG,oGAAsG;IACtG,EAAqF,AAArF,mFAAqF;IACrF,EAAsD,AAAtD,oDAAsD;IACtD,EAAqG,AAArG,mGAAqG;IACrG,EAAgD,AAAhD,8CAAgD;IAChD,MAAM,CAAC,CAAC;QACN,WAAW,EAAE,CAAC;eACT,qBAAc,CAAC,KAAK,EAAE,CAAC;gBAAA,SAAS,EAAE,IAAI;YAAA,CAAC;kBAC1C,IAAI;YACJ,QAAQ,EAAE,EAAE;YACZ,CAAiB,kBAAE,KAAK,CAAC,CAAiB,qBAAK,OAAO;QACxD,CAAC;QACD,UAAU,EAAE,CAAC;YACX,EAAE,EAAE,OAAO;QACb,CAAC;IACH,CAAC;AACH,CAAC","sources":["packages/@react-aria/dialog/src/index.ts","packages/@react-aria/dialog/src/useDialog.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useDialog';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {filterDOMProps, useSlotId} from '@react-aria/utils';\nimport {focusSafely} from '@react-aria/focus';\nimport {HTMLAttributes, RefObject, useEffect} from 'react';\n\ninterface DialogAria {\n  /** Props for the dialog container element. */\n  dialogProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the dialog title element. */\n  titleProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(props: AriaDialogProps, ref: RefObject<HTMLElement>): DialogAria {\n  let {role = 'dialog'} = props;\n  let titleId = useSlotId();\n  titleId = props['aria-label'] ? undefined : titleId;\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      let timeout = setTimeout(() => {\n        if (document.activeElement === ref.current) {\n          ref.current.blur();\n          focusSafely(ref.current);\n        }\n      }, 500);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      tabIndex: -1,\n      'aria-labelledby': props['aria-labelledby'] || titleId\n    },\n    titleProps: {\n      id: titleId\n    }\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}