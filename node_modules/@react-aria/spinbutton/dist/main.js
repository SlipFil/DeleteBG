var $2BLaI$reactarialiveannouncer = require("@react-aria/live-announcer");
var $2BLaI$react = require("react");
var $2BLaI$reactariautils = require("@react-aria/utils");
var $2BLaI$reactariai18n = require("@react-aria/i18n");

function $parcel$exportWildcard(dest, source) {
  Object.keys(source).forEach(function(key) {
    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {
      return;
    }

    Object.defineProperty(dest, key, {
      enumerable: true,
      get: function get() {
        return source[key];
      }
    });
  });

  return dest;
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $37bbd4c129023f61$exports = {};

$parcel$export($37bbd4c129023f61$exports, "useSpinButton", () => $37bbd4c129023f61$export$e908e06f4b8e3402);


var $55fd103defc81437$exports = {};
var $db6c23092fbfea22$exports = {};
$db6c23092fbfea22$exports = JSON.parse("{\"Empty\":\"فارغ\"}");


var $f4b3121a918895c4$exports = {};
$f4b3121a918895c4$exports = JSON.parse("{\"Empty\":\"Изпразни\"}");


var $d01cc02a83842f4c$exports = {};
$d01cc02a83842f4c$exports = JSON.parse("{\"Empty\":\"Prázdné\"}");


var $ae20f188998ad249$exports = {};
$ae20f188998ad249$exports = JSON.parse("{\"Empty\":\"Tom\"}");


var $f17ee93fe12c77e5$exports = {};
$f17ee93fe12c77e5$exports = JSON.parse("{\"Empty\":\"Leer\"}");


var $9691dc6a69dd5ba9$exports = {};
$9691dc6a69dd5ba9$exports = JSON.parse("{\"Empty\":\"Άδειο\"}");


var $b2385949437f9917$exports = {};
$b2385949437f9917$exports = JSON.parse("{\"Empty\":\"Empty\"}");


var $ed6d4429037ec60d$exports = {};
$ed6d4429037ec60d$exports = JSON.parse("{\"Empty\":\"Vacío\"}");


var $c9cb32f5c221f118$exports = {};
$c9cb32f5c221f118$exports = JSON.parse("{\"Empty\":\"Tühjenda\"}");


var $5be8f6c4ad248dda$exports = {};
$5be8f6c4ad248dda$exports = JSON.parse("{\"Empty\":\"Tyhjä\"}");


var $3f46a428519ddd7e$exports = {};
$3f46a428519ddd7e$exports = JSON.parse("{\"Empty\":\"Vide\"}");


var $41c7f98604688f35$exports = {};
$41c7f98604688f35$exports = JSON.parse("{\"Empty\":\"ריק\"}");


var $183e97db82c2cbf0$exports = {};
$183e97db82c2cbf0$exports = JSON.parse("{\"Empty\":\"Prazno\"}");


var $749cae0664a7dc03$exports = {};
$749cae0664a7dc03$exports = JSON.parse("{\"Empty\":\"Üres\"}");


var $4129f25b282c341e$exports = {};
$4129f25b282c341e$exports = JSON.parse("{\"Empty\":\"Vuoto\"}");


var $908925465e00dbfc$exports = {};
$908925465e00dbfc$exports = JSON.parse("{\"Empty\":\"空\"}");


var $34fae452e2e356d9$exports = {};
$34fae452e2e356d9$exports = JSON.parse("{\"Empty\":\"비어 있음\"}");


var $458e73ba0e56bdd4$exports = {};
$458e73ba0e56bdd4$exports = JSON.parse("{\"Empty\":\"Tuščias\"}");


var $2ddf9ecf84010f95$exports = {};
$2ddf9ecf84010f95$exports = JSON.parse("{\"Empty\":\"Tukšs\"}");


var $b787a09821b773ea$exports = {};
$b787a09821b773ea$exports = JSON.parse("{\"Empty\":\"Tom\"}");


var $6b951cc1b0de6d71$exports = {};
$6b951cc1b0de6d71$exports = JSON.parse("{\"Empty\":\"Leeg\"}");


var $fc3eb600d1c488fa$exports = {};
$fc3eb600d1c488fa$exports = JSON.parse("{\"Empty\":\"Pusty\"}");


var $ba0f4e25830e4bbf$exports = {};
$ba0f4e25830e4bbf$exports = JSON.parse("{\"Empty\":\"Vazio\"}");


var $2cd34c446640bd1d$exports = {};
$2cd34c446640bd1d$exports = JSON.parse("{\"Empty\":\"Vazio\"}");


var $55c7bf6cdae0bed5$exports = {};
$55c7bf6cdae0bed5$exports = JSON.parse("{\"Empty\":\"Gol\"}");


var $240e8ca0b043d76a$exports = {};
$240e8ca0b043d76a$exports = JSON.parse("{\"Empty\":\"Не заполнено\"}");


var $c28c7ecdb94a1868$exports = {};
$c28c7ecdb94a1868$exports = JSON.parse("{\"Empty\":\"Prázdne\"}");


var $c2d6776ba29b6517$exports = {};
$c2d6776ba29b6517$exports = JSON.parse("{\"Empty\":\"Prazen\"}");


var $628464d96d5a7855$exports = {};
$628464d96d5a7855$exports = JSON.parse("{\"Empty\":\"Prazno\"}");


var $5a1bcd0a675a6f60$exports = {};
$5a1bcd0a675a6f60$exports = JSON.parse("{\"Empty\":\"Tomt\"}");


var $f71e9bc82e4a5a16$exports = {};
$f71e9bc82e4a5a16$exports = JSON.parse("{\"Empty\":\"Boş\"}");


var $cb1ece2578f5693e$exports = {};
$cb1ece2578f5693e$exports = JSON.parse("{\"Empty\":\"Пусто\"}");


var $d8ce7cc5e4398a80$exports = {};
$d8ce7cc5e4398a80$exports = JSON.parse("{\"Empty\":\"空\"}");


var $8db5191ec1aacb53$exports = {};
$8db5191ec1aacb53$exports = JSON.parse("{\"Empty\":\"空白\"}");


$55fd103defc81437$exports = {
    "ar-AE": $db6c23092fbfea22$exports,
    "bg-BG": $f4b3121a918895c4$exports,
    "cs-CZ": $d01cc02a83842f4c$exports,
    "da-DK": $ae20f188998ad249$exports,
    "de-DE": $f17ee93fe12c77e5$exports,
    "el-GR": $9691dc6a69dd5ba9$exports,
    "en-US": $b2385949437f9917$exports,
    "es-ES": $ed6d4429037ec60d$exports,
    "et-EE": $c9cb32f5c221f118$exports,
    "fi-FI": $5be8f6c4ad248dda$exports,
    "fr-FR": $3f46a428519ddd7e$exports,
    "he-IL": $41c7f98604688f35$exports,
    "hr-HR": $183e97db82c2cbf0$exports,
    "hu-HU": $749cae0664a7dc03$exports,
    "it-IT": $4129f25b282c341e$exports,
    "ja-JP": $908925465e00dbfc$exports,
    "ko-KR": $34fae452e2e356d9$exports,
    "lt-LT": $458e73ba0e56bdd4$exports,
    "lv-LV": $2ddf9ecf84010f95$exports,
    "nb-NO": $b787a09821b773ea$exports,
    "nl-NL": $6b951cc1b0de6d71$exports,
    "pl-PL": $fc3eb600d1c488fa$exports,
    "pt-BR": $ba0f4e25830e4bbf$exports,
    "pt-PT": $2cd34c446640bd1d$exports,
    "ro-RO": $55c7bf6cdae0bed5$exports,
    "ru-RU": $240e8ca0b043d76a$exports,
    "sk-SK": $c28c7ecdb94a1868$exports,
    "sl-SI": $c2d6776ba29b6517$exports,
    "sr-SP": $628464d96d5a7855$exports,
    "sv-SE": $5a1bcd0a675a6f60$exports,
    "tr-TR": $f71e9bc82e4a5a16$exports,
    "uk-UA": $cb1ece2578f5693e$exports,
    "zh-CN": $d8ce7cc5e4398a80$exports,
    "zh-TW": $8db5191ec1aacb53$exports
};




function $37bbd4c129023f61$export$e908e06f4b8e3402(props) {
    const _async = $2BLaI$react.useRef();
    let { value: value , textValue: textValue , minValue: minValue , maxValue: maxValue , isDisabled: isDisabled , isReadOnly: isReadOnly , isRequired: isRequired , onIncrement: onIncrement , onIncrementPage: onIncrementPage , onDecrement: onDecrement , onDecrementPage: onDecrementPage , onDecrementToMin: onDecrementToMin , onIncrementToMax: onIncrementToMax  } = props;
    const formatMessage = $2BLaI$reactariai18n.useMessageFormatter((/*@__PURE__*/$parcel$interopDefault($55fd103defc81437$exports)));
    const propsRef = $2BLaI$react.useRef(props);
    propsRef.current = props;
    const clearAsync = ()=>clearTimeout(_async.current)
    ;
    // eslint-disable-next-line arrow-body-style
    $2BLaI$react.useEffect(()=>{
        return ()=>clearAsync()
        ;
    }, []);
    let onKeyDown = (e)=>{
        if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) return;
        switch(e.key){
            case 'PageUp':
                if (onIncrementPage) {
                    e.preventDefault();
                    onIncrementPage();
                    break;
                }
            // fallthrough!
            case 'ArrowUp':
            case 'Up':
                if (onIncrement) {
                    e.preventDefault();
                    onIncrement();
                }
                break;
            case 'PageDown':
                if (onDecrementPage) {
                    e.preventDefault();
                    onDecrementPage();
                    break;
                }
            // fallthrough
            case 'ArrowDown':
            case 'Down':
                if (onDecrement) {
                    e.preventDefault();
                    onDecrement();
                }
                break;
            case 'Home':
                if (onDecrementToMin) {
                    e.preventDefault();
                    onDecrementToMin();
                }
                break;
            case 'End':
                if (onIncrementToMax) {
                    e.preventDefault();
                    onIncrementToMax();
                }
                break;
        }
    };
    let isFocused = $2BLaI$react.useRef(false);
    let onFocus = ()=>{
        isFocused.current = true;
    };
    let onBlur = ()=>{
        isFocused.current = false;
    };
    // Replace Unicode hyphen-minus (U+002D) with minus sign (U+2212).
    // This ensures that macOS VoiceOver announces it as "minus" even with other characters between the minus sign
    // and the number (e.g. currency symbol). Otherwise it announces nothing because it assumes the character is a hyphen.
    // In addition, replace the empty string with the word "Empty" so that iOS VoiceOver does not read "50%" for an empty field.
    textValue = textValue === '' ? formatMessage('Empty') : (textValue || `${value}`).replace('-', '\u2212');
    $2BLaI$react.useEffect(()=>{
        if (isFocused.current) $2BLaI$reactarialiveannouncer.announce(textValue, 'assertive');
    }, [
        textValue
    ]);
    const onIncrementPressStart = $2BLaI$react.useCallback((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onIncrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(maxValue) || isNaN(value) || value < maxValue) onIncrementPressStart(60);
        }, initialStepDelay);
    }, [
        onIncrement,
        maxValue,
        value
    ]);
    const onDecrementPressStart = $2BLaI$react.useCallback((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onDecrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(minValue) || isNaN(value) || value > minValue) onDecrementPressStart(60);
        }, initialStepDelay);
    }, [
        onDecrement,
        minValue,
        value
    ]);
    let cancelContextMenu = (e)=>{
        e.preventDefault();
    };
    let { addGlobalListener: addGlobalListener , removeAllGlobalListeners: removeAllGlobalListeners  } = $2BLaI$reactariautils.useGlobalListeners();
    return {
        spinButtonProps: {
            role: 'spinbutton',
            'aria-valuenow': !isNaN(value) ? value : null,
            'aria-valuetext': textValue,
            'aria-valuemin': minValue,
            'aria-valuemax': maxValue,
            'aria-disabled': isDisabled || null,
            'aria-readonly': isReadOnly || null,
            'aria-required': isRequired || null,
            onKeyDown: onKeyDown,
            onFocus: onFocus,
            onBlur: onBlur
        },
        incrementButtonProps: {
            onPressStart: ()=>{
                onIncrementPressStart(400);
                addGlobalListener(window, 'contextmenu', cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        },
        decrementButtonProps: {
            onPressStart: ()=>{
                onDecrementPressStart(400);
                addGlobalListener(window, 'contextmenu', cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        }
    };
}


$parcel$exportWildcard(module.exports, $37bbd4c129023f61$exports);


//# sourceMappingURL=main.js.map
