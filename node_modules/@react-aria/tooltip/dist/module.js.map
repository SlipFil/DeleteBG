{"mappings":"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","sources":["packages/@react-aria/tooltip/src/index.ts","packages/@react-aria/tooltip/src/useTooltip.ts","packages/@react-aria/tooltip/src/useTooltipTrigger.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTooltip';\nexport * from './useTooltipTrigger';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTooltipProps} from '@react-types/tooltip';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes} from 'react';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useHover} from '@react-aria/interactions';\n\ninterface TooltipAria {\n  /**\n   * Props for the tooltip element.\n   */\n  tooltipProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a Tooltip component.\n */\nexport function useTooltip(props: AriaTooltipProps, state?: TooltipTriggerState): TooltipAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {hoverProps} = useHover({\n    onHoverStart: () => state?.open(true),\n    onHoverEnd: () => state?.close()\n  });\n\n  return {\n    tooltipProps: mergeProps(domProps, hoverProps, {\n      role: 'tooltip'\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvents} from '@react-types/shared';\nimport {getInteractionModality, HoverProps, isFocusVisible, PressProps, usePress} from '@react-aria/interactions';\nimport {HTMLAttributes, RefObject, useEffect, useRef} from 'react';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useFocusable} from '@react-aria/focus';\nimport {useHover} from '@react-aria/interactions';\n\ninterface TooltipTriggerAria {\n  /**\n   * Props for the trigger element.\n   */\n  triggerProps: HTMLAttributes<HTMLElement> & PressProps & HoverProps & FocusEvents,\n\n  /**\n   * Props for the overlay container element.\n   */\n  tooltipProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tooltip trigger, e.g. a button\n * that shows a description when focused or hovered.\n */\nexport function useTooltipTrigger(props: TooltipTriggerProps, state: TooltipTriggerState, ref: RefObject<HTMLElement>) : TooltipTriggerAria {\n  let {\n    isDisabled,\n    trigger\n  } = props;\n\n  let tooltipId = useId();\n\n  let isHovered = useRef(false);\n  let isFocused = useRef(false);\n\n  let handleShow = () => {\n    if (isHovered.current || isFocused.current) {\n      state.open(isFocused.current);\n    }\n  };\n\n  let handleHide = (immediate?: boolean) => {\n    if (!isHovered.current && !isFocused.current) {\n      state.close(immediate);\n    }\n  };\n\n  useEffect(() => {\n    let onKeyDown = (e) => {\n      if (ref && ref.current) {\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        if (e.key === 'Escape') {\n          state.close(true);\n        }\n      }\n    };\n    if (state.isOpen) {\n      document.addEventListener('keydown', onKeyDown, true);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n\n  let onHoverStart = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if (getInteractionModality() === 'pointer') {\n      isHovered.current = true;\n    } else {\n      isHovered.current = false;\n    }\n    handleShow();\n  };\n\n  let onHoverEnd = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n\n  let onPressStart = () => {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let onFocus = () => {\n    let isVisible = isFocusVisible();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart,\n    onHoverEnd\n  });\n\n  let {pressProps} = usePress({onPressStart});\n\n  let {focusableProps} = useFocusable({\n    isDisabled,\n    onFocus,\n    onBlur\n  }, ref);\n\n  return {\n    triggerProps: {\n      'aria-describedby': state.isOpen ? tooltipId : undefined,\n      ...mergeProps(focusableProps, hoverProps, pressProps)\n    },\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}