{"mappings":"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","sources":["packages/@react-spectrum/progress/src/index.ts","packages/@react-spectrum/progress/src/ProgressBar.tsx","packages/@react-spectrum/progress/src/ProgressBarBase.tsx","packages/@adobe/spectrum-css-temp/components/barloader/vars.css","packages/@react-spectrum/progress/src/ProgressCircle.tsx","packages/@adobe/spectrum-css-temp/components/circleloader/vars.css"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './ProgressBar';\nexport * from './ProgressCircle';\nexport * from './ProgressBarBase';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {ProgressBarBase} from './ProgressBarBase';\nimport React from 'react';\nimport {SpectrumProgressBarProps} from '@react-types/progress';\nimport styles from '@adobe/spectrum-css-temp/components/barloader/vars.css';\nimport {useProgressBar} from '@react-aria/progress';\n\nfunction ProgressBar(props: SpectrumProgressBarProps, ref: DOMRef<HTMLDivElement>) {\n  let {variant, ...otherProps} = props;\n  const {\n    progressBarProps,\n    labelProps\n  } = useProgressBar(props);\n\n  return (\n    <ProgressBarBase\n      {...otherProps}\n      ref={ref}\n      barProps={progressBarProps}\n      labelProps={labelProps}\n      barClassName={\n        classNames(\n          styles,\n          {\n            'spectrum-BarLoader--overBackground': variant === 'overBackground'\n          }\n        )\n      } />\n  );\n}\n\n/**\n * ProgressBars show the progression of a system operation: downloading, uploading, processing, etc., in a visual way.\n * They can represent either determinate or indeterminate progress.\n */\nlet _ProgressBar = React.forwardRef(ProgressBar);\nexport {_ProgressBar as ProgressBar};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {clamp} from '@react-aria/utils';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {ProgressBarProps} from '@react-types/progress';\nimport React, {CSSProperties, HTMLAttributes} from 'react';\nimport {SpectrumProgressBarBaseProps} from '@react-types/progress';\nimport styles from '@adobe/spectrum-css-temp/components/barloader/vars.css';\n\ninterface ProgressBarBaseProps extends SpectrumProgressBarBaseProps, ProgressBarProps {\n  barClassName?: string,\n  barProps?: HTMLAttributes<HTMLDivElement>,\n  labelProps?: HTMLAttributes<HTMLLabelElement>\n}\n\n// Base ProgressBar component shared with Meter.\nfunction ProgressBarBase(props: ProgressBarBaseProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    size = 'L',\n    label,\n    barClassName,\n    showValueLabel = !!label,\n    labelPosition = 'top',\n    isIndeterminate = false,\n    barProps,\n    labelProps,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  value = clamp(value, minValue, maxValue);\n\n  let barStyle: CSSProperties = {};\n  if (!isIndeterminate) {\n    let percentage = (value - minValue) / (maxValue - minValue);\n    barStyle.width = `${Math.round(percentage * 100)}%`;\n  }\n\n  // Ideally this should be in useProgressBar, but children\n  // are not supported in ProgressCircle which shares that hook...\n  if (!label && !ariaLabel && !ariaLabelledby) {\n    console.warn('If you do not provide a visible label via children, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n  // use inline style for fit-content because cssnano is too smart for us and will strip out the -moz prefix in css files\n  return (\n    <div\n      {...barProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-BarLoader',\n          {\n            'spectrum-BarLoader--small': size === 'S',\n            'spectrum-BarLoader--large': size === 'L',\n            'spectrum-BarLoader--indeterminate': isIndeterminate,\n            'spectrum-BarLoader--sideLabel': labelPosition === 'side'\n          },\n          barClassName,\n          styleProps.className\n        )\n      }\n      style={{minWidth: '-moz-fit-content', ...styleProps.style}}>\n      {label &&\n        <span\n          {...labelProps}\n          className={classNames(styles, 'spectrum-BarLoader-label')}>\n            {label}\n        </span>\n      }\n      {showValueLabel &&\n        <div className={classNames(styles, 'spectrum-BarLoader-percentage')}>\n          {barProps['aria-valuetext']}\n        </div>\n      }\n      <div className={classNames(styles, 'spectrum-BarLoader-track')}>\n        <div\n          className={classNames(styles, 'spectrum-BarLoader-fill')}\n          style={barStyle} />\n      </div>\n    </div>\n  );\n}\n\nlet _ProgressBarBase = React.forwardRef(ProgressBarBase);\nexport {_ProgressBarBase as ProgressBarBase};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {clamp} from '@react-aria/utils';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport React, {CSSProperties} from 'react';\nimport {SpectrumProgressCircleProps} from '@react-types/progress';\nimport styles from '@adobe/spectrum-css-temp/components/circleloader/vars.css';\nimport {useProgressBar} from '@react-aria/progress';\n\nfunction ProgressCircle(props: SpectrumProgressCircleProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    size = 'M',\n    variant,\n    isIndeterminate = false,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  value = clamp(value, minValue, maxValue);\n  let {progressBarProps} = useProgressBar({...props, value});\n\n  let subMask1Style: CSSProperties = {};\n  let subMask2Style: CSSProperties = {};\n  if (!isIndeterminate) {\n    let percentage = (value - minValue) / (maxValue - minValue) * 100;\n    let angle;\n    if (percentage > 0 && percentage <= 50) {\n      angle = -180 + (percentage / 50 * 180);\n      subMask1Style.transform = `rotate(${angle}deg)`;\n      subMask2Style.transform = 'rotate(-180deg)';\n    } else if (percentage > 50) {\n      angle = -180 + (percentage - 50) / 50 * 180;\n      subMask1Style.transform = 'rotate(0deg)';\n      subMask2Style.transform = `rotate(${angle}deg)`;\n    }\n  }\n\n  if (!ariaLabel && !ariaLabelledby) {\n    console.warn('ProgressCircle requires an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  return (\n    <div\n      {...styleProps}\n      {...progressBarProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-CircleLoader',\n          {\n            'spectrum-CircleLoader--indeterminate': isIndeterminate,\n            'spectrum-CircleLoader--small': size === 'S',\n            'spectrum-CircleLoader--large': size === 'L',\n            'spectrum-CircleLoader--overBackground': variant === 'overBackground'\n          },\n          styleProps.className\n        )\n      }>\n      <div className={classNames(styles, 'spectrum-CircleLoader-track')} />\n      <div className={classNames(styles, 'spectrum-CircleLoader-fills')} >\n        <div className={classNames(styles, 'spectrum-CircleLoader-fillMask1')} >\n          <div\n            className={classNames(styles, 'spectrum-CircleLoader-fillSubMask1')}\n            data-testid=\"fillSubMask1\"\n            style={subMask1Style}>\n            <div className={classNames(styles, 'spectrum-CircleLoader-fill')} />\n          </div>\n        </div>\n        <div className={classNames(styles, 'spectrum-CircleLoader-fillMask2')} >\n          <div\n            className={classNames(styles, 'spectrum-CircleLoader-fillSubMask2')}\n            data-testid=\"fillSubMask2\"\n            style={subMask2Style} >\n            <div className={classNames(styles, 'spectrum-CircleLoader-fill')} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ProgressCircles show the progression of a system operation such as downloading, uploading, processing, etc. in a visual way.\n * They can represent determinate or indeterminate progress.\n */\nlet _ProgressCircle = React.forwardRef(ProgressCircle);\nexport {_ProgressCircle as ProgressCircle};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n"],"names":[],"version":3,"file":"main.js.map"}