{"mappings":"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","sources":["packages/@react-spectrum/checkbox/src/index.ts","packages/@react-spectrum/checkbox/src/Checkbox.tsx","packages/@react-spectrum/checkbox/src/context.ts","packages/@adobe/spectrum-css-temp/components/checkbox/vars.css","packages/@react-spectrum/checkbox/src/CheckboxGroup.tsx","packages/@adobe/spectrum-css-temp/components/fieldlabel/vars.css","packages/@adobe/spectrum-css-temp/components/fieldgroup/vars.css"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Checkbox';\nexport * from './CheckboxGroup';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport CheckmarkSmall from '@spectrum-icons/ui/CheckmarkSmall';\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport DashSmall from '@spectrum-icons/ui/DashSmall';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useContext, useRef} from 'react';\nimport {SpectrumCheckboxProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/checkbox/vars.css';\nimport {useCheckbox, useCheckboxGroupItem} from '@react-aria/checkbox';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Checkbox(props: SpectrumCheckboxProps, ref: FocusableRef<HTMLLabelElement>) {\n  let originalProps = props;\n  props = useProviderProps(props);\n  let {\n    isIndeterminate = false,\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    validationState,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  let groupState = useContext(CheckboxGroupContext);\n  let {inputProps} = groupState\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    ? useCheckboxGroupItem({\n      ...props,\n      // Value is optional for standalone checkboxes, but required for CheckboxGroup items;\n      // it's passed explicitly here to avoid typescript error (requires strictNullChecks disabled).\n      value: props.value,\n      // Only pass isRequired and validationState to react-aria if they came from\n      // the props for this individual checkbox, and not from the group via context.\n      isRequired: originalProps.isRequired,\n      validationState: originalProps.validationState\n    }, groupState, inputRef)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    : useCheckbox(props, useToggleState(props), inputRef);\n\n  let markIcon = isIndeterminate\n    ? <DashSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-partialCheckmark')} />\n    : <CheckmarkSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-checkmark')} />;\n\n  if (groupState) {\n    for (let key of ['isSelected', 'defaultSelected', 'isEmphasized']) {\n      if (originalProps[key] != null) {\n        console.warn(`${key} is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.`);\n      }\n    }\n    if (props.value == null) {\n      console.warn('A <Checkbox> element within a <CheckboxGroup> requires a `value` property.');\n    }\n  }\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Checkbox',\n          {\n            'is-checked': inputProps.checked,\n            'is-indeterminate': isIndeterminate,\n            'spectrum-Checkbox--quiet': !isEmphasized,\n            'is-invalid': validationState === 'invalid',\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-Checkbox-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-Checkbox-box')}>{markIcon}</span>\n      {children && (\n        <span className={classNames(styles, 'spectrum-Checkbox-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n/**\n * Checkboxes allow users to select multiple items from a list of individual items,\n * or to mark one individual item as selected.\n */\nlet _Checkbox = forwardRef(Checkbox);\nexport {_Checkbox as Checkbox};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport React from 'react';\n\nexport const CheckboxGroupContext = React.createContext<CheckboxGroupState>(null);\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, LabelPosition} from '@react-types/shared';\nimport {Label} from '@react-spectrum/label';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React from 'react';\nimport {SpectrumCheckboxGroupProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/fieldgroup/vars.css';\nimport {useCheckboxGroup} from '@react-aria/checkbox';\nimport {useCheckboxGroupState} from '@react-stately/checkbox';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction CheckboxGroup(props: SpectrumCheckboxGroupProps, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    isEmphasized,\n    isRequired,\n    necessityIndicator,\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    children,\n    orientation = 'vertical',\n    validationState,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let state = useCheckboxGroupState(props);\n  let {labelProps, groupProps} = useCheckboxGroup(props, state);\n\n  return (\n    <div\n      {...styleProps}\n      {...groupProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-FieldGroup',\n          {\n            'spectrum-FieldGroup--positionSide': labelPosition === 'side'\n          },\n          // This is so checkbox group works inside a <Form>\n          classNames(\n            labelStyles,\n            'spectrum-Field'\n          ),\n          styleProps.className\n        )\n      }\n      ref={domRef}>\n      {label &&\n        <Label\n          {...labelProps}\n          elementType=\"span\"\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          includeNecessityIndicatorInAccessibilityName>\n          {label}\n        </Label>\n      }\n      <div\n        role=\"presentation\"\n        className={\n          classNames(\n            styles,\n            'spectrum-FieldGroup-group',\n            {\n              'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n            }\n          )\n        }>\n        <Provider isEmphasized={isEmphasized} validationState={validationState}>\n          <CheckboxGroupContext.Provider value={state}>\n            {children}\n          </CheckboxGroupContext.Provider>\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\nconst _CheckboxGroup = React.forwardRef(CheckboxGroup);\nexport {_CheckboxGroup as CheckboxGroup};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n"],"names":[],"version":3,"file":"main.js.map"}