{"mappings":"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","sources":["packages/@react-spectrum/actiongroup/src/index.ts","packages/@react-spectrum/actiongroup/src/ActionGroup.tsx","packages/@adobe/spectrum-css-temp/components/button/vars.css","packages/@adobe/spectrum-css-temp/components/actiongroup/vars.css"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './ActionGroup';\nexport {Item} from '@react-stately/collections';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionButton} from '@react-spectrum/button';\nimport {AriaLabelingProps, DOMProps, DOMRef, Node, StyleProps} from '@react-types/shared';\nimport buttonStyles from '@adobe/spectrum-css-temp/components/button/vars.css';\nimport ChevronDownMedium from '@spectrum-icons/ui/ChevronDownMedium';\nimport {\n  classNames,\n  ClearSlots,\n  SlotProvider,\n  useDOMRef,\n  useSlotProps,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {filterDOMProps, mergeProps, useId, useLayoutEffect, useResizeObserver, useValueEffect} from '@react-aria/utils';\nimport {Item, Menu, MenuTrigger} from '@react-spectrum/menu';\nimport {ListState, useListState} from '@react-stately/list';\nimport More from '@spectrum-icons/workflow/More';\nimport {PressResponder, useHover} from '@react-aria/interactions';\nimport {Provider} from '@react-spectrum/provider';\nimport React, {forwardRef, Key, ReactElement, ReactNode, useCallback, useMemo, useRef, useState} from 'react';\nimport {SpectrumActionGroupProps} from '@react-types/actiongroup';\nimport styles from '@adobe/spectrum-css-temp/components/actiongroup/vars.css';\nimport {Text} from '@react-spectrum/text';\nimport {Tooltip, TooltipTrigger} from '@react-spectrum/tooltip';\nimport {useActionGroup} from '@react-aria/actiongroup';\nimport {useActionGroupItem} from '@react-aria/actiongroup';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction ActionGroup<T extends object>(props: SpectrumActionGroupProps<T>, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  props = useSlotProps(props, 'actionGroup');\n\n  let {\n    isEmphasized,\n    density,\n    isJustified,\n    isDisabled,\n    orientation = 'horizontal',\n    isQuiet,\n    staticColor,\n    overflowMode = 'wrap',\n    onAction,\n    buttonLabelBehavior,\n    summaryIcon,\n    ...otherProps\n  } = props;\n\n  let domRef = useDOMRef(ref);\n  let wrapperRef = useRef<HTMLDivElement>(null);\n  let state = useListState({...props, suppressTextValueWarning: true});\n  let {actionGroupProps} = useActionGroup(props, state, domRef);\n  let isVertical = orientation === 'vertical';\n  let providerProps = {isEmphasized, isDisabled, isQuiet};\n  let {styleProps} = useStyleProps(props);\n\n  // Only hide button text if every item contains more than just plain text (we assume an icon).\n  let isIconCollapsible = useMemo(() => [...state.collection].every(item => typeof item.rendered !== 'string'), [state.collection]);\n  let [{visibleItems, hideButtonText, isMeasuring}, setVisibleItems] = useValueEffect({\n    visibleItems: state.collection.size,\n    hideButtonText: buttonLabelBehavior === 'hide' && isIconCollapsible,\n    isMeasuring: false\n  });\n\n  let selectionMode = state.selectionManager.selectionMode;\n  let updateOverflow = useCallback(() => {\n    if (overflowMode === 'wrap') {\n      return;\n    }\n\n    if (orientation === 'vertical' && selectionMode !== 'none') {\n      // Collapsing vertical action groups with selection is currently unsupported by Spectrum.\n      return;\n    }\n\n    let computeVisibleItems = (visibleItems: number) => {\n      let listItems = Array.from(domRef.current.children) as HTMLLIElement[];\n      let containerSize = orientation === 'horizontal' ? wrapperRef.current.offsetWidth : wrapperRef.current.offsetHeight;\n      let isShowingMenu = visibleItems < state.collection.size;\n      let calculatedSize = 0;\n      let newVisibleItems = 0;\n\n      if (isShowingMenu) {\n        calculatedSize += orientation === 'horizontal'\n          ? outerWidth(listItems.pop(), false, true)\n          : outerHeight(listItems.pop(), false, true);\n      }\n\n      for (let [i, item] of listItems.entries()) {\n        calculatedSize += orientation === 'horizontal'\n          ? outerWidth(item, i === 0, i === listItems.length - 1)\n          : outerHeight(item, i === 0, i === listItems.length - 1);\n        if (calculatedSize <= containerSize) {\n          newVisibleItems++;\n        } else {\n          break;\n        }\n      }\n\n      // If selection is enabled, and not all of the items fit, collapse all of them into a dropdown\n      // immediately rather than having some visible and some not.\n      if (selectionMode !== 'none' && newVisibleItems < state.collection.size) {\n        return 0;\n      }\n\n      return newVisibleItems;\n    };\n\n    setVisibleItems(function *() {\n      let hideButtonText = buttonLabelBehavior === 'hide' && isIconCollapsible;\n\n      // Update to show all items.\n      yield {\n        visibleItems: state.collection.size,\n        hideButtonText,\n        isMeasuring: true\n      };\n\n      // Measure, and update to show the items that fit.\n      let newVisibleItems = computeVisibleItems(state.collection.size);\n      let isMeasuring = newVisibleItems < state.collection.size && newVisibleItems > 0;\n\n      // If not all of the buttons fit, and buttonLabelBehavior is 'collapse', then first try hiding\n      // the button text and only showing icons. Only if that still doesn't fit collapse into a menu.\n      if (newVisibleItems < state.collection.size && buttonLabelBehavior === 'collapse' && isIconCollapsible) {\n        yield {\n          visibleItems: state.collection.size,\n          hideButtonText: true,\n          isMeasuring: true\n        };\n\n        newVisibleItems = computeVisibleItems(state.collection.size);\n        isMeasuring = newVisibleItems < state.collection.size && newVisibleItems > 0;\n        hideButtonText = true;\n      }\n\n      yield {\n        visibleItems: newVisibleItems,\n        hideButtonText,\n        isMeasuring\n      };\n\n      // If the number of items is less than the number of children,\n      // then update again to ensure that the menu fits.\n      if (isMeasuring) {\n        yield {\n          visibleItems: computeVisibleItems(newVisibleItems),\n          hideButtonText,\n          isMeasuring: false\n        };\n      }\n    });\n  }, [domRef, state.collection, setVisibleItems, overflowMode, selectionMode, buttonLabelBehavior, isIconCollapsible, orientation]);\n\n  // Watch the parent element for size changes. Watching only the action group itself may not work\n  // in all scenarios because it may not shrink when available space is reduced.\n  let parentRef = useMemo(() => ({\n    get current() {\n      return wrapperRef.current.parentElement;\n    }\n  }), [wrapperRef]);\n  useResizeObserver({ref: overflowMode !== 'wrap' ? parentRef : null, onResize: updateOverflow});\n  useLayoutEffect(updateOverflow, [updateOverflow, state.collection]);\n\n  let children = [...state.collection];\n  let menuItem = null;\n  let menuProps = {};\n\n  // If there are no visible items, don't apply any props to the action group container\n  // and pass all aria labeling props through to the menu button.\n  if (overflowMode === 'collapse' && visibleItems === 0) {\n    menuProps = filterDOMProps(props, {labelable: true});\n    actionGroupProps = {};\n  }\n\n  if (overflowMode === 'collapse' && visibleItems < state.collection.size) {\n    let menuChildren = children.slice(visibleItems);\n    children = children.slice(0, visibleItems);\n    menuItem = (\n      <ActionGroupMenu\n        {...menuProps}\n        items={menuChildren}\n        onAction={onAction}\n        isDisabled={isDisabled}\n        isEmphasized={isEmphasized}\n        staticColor={staticColor}\n        state={state}\n        summaryIcon={summaryIcon}\n        hideButtonText={hideButtonText}\n        isOnlyItem={visibleItems === 0}\n        orientation={orientation} />\n    );\n  }\n\n  let style = {\n    ...styleProps.style,\n    // While measuring, take up as much space as possible.\n    flexBasis: isMeasuring ? '100%' : undefined\n  };\n\n  return (\n    <div {...styleProps} style={style} className={classNames(styles, 'flex-container', styleProps.className)} ref={wrapperRef}>\n      <div\n        {...actionGroupProps}\n        ref={domRef}\n        className={\n          classNames(\n            styles,\n            'flex-gap',\n            'spectrum-ActionGroup',\n            {\n              'spectrum-ActionGroup--quiet': isQuiet,\n              'spectrum-ActionGroup--vertical': isVertical,\n              'spectrum-ActionGroup--compact': density === 'compact',\n              'spectrum-ActionGroup--justified': isJustified && !isMeasuring,\n              'spectrum-ActionGroup--overflowCollapse': overflowMode === 'collapse'\n            },\n            otherProps.UNSAFE_className\n          )\n        }>\n        <Provider {...providerProps}>\n          {children.map((item) => (\n            <ActionGroupItem\n              key={item.key}\n              onAction={onAction}\n              isDisabled={isDisabled}\n              isEmphasized={isEmphasized}\n              staticColor={staticColor}\n              item={item}\n              state={state}\n              hideButtonText={hideButtonText}\n              orientation={orientation} />\n          ))}\n          {menuItem}\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * An ActionGroup is a grouping of ActionButtons that are related to one another.\n */\nconst _ActionGroup = forwardRef(ActionGroup) as <T>(props: SpectrumActionGroupProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_ActionGroup as ActionGroup};\n\ninterface ActionGroupItemProps<T> extends DOMProps, StyleProps {\n  item: Node<T>,\n  state: ListState<T>,\n  isDisabled: boolean,\n  isEmphasized: boolean,\n  staticColor?: 'white' | 'black',\n  hideButtonText?: boolean,\n  orientation?: 'horizontal' | 'vertical',\n  onAction: (key: Key) => void\n}\n\nfunction ActionGroupItem<T>({item, state, isDisabled, isEmphasized, staticColor, onAction, hideButtonText, orientation}: ActionGroupItemProps<T>) {\n  let ref = useRef();\n  let {buttonProps} = useActionGroupItem({key: item.key}, state);\n  isDisabled = isDisabled || state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  if (onAction && !isDisabled) {\n    buttonProps = mergeProps(buttonProps, {\n      onPress: () => onAction(item.key)\n    });\n  }\n\n  // If button text is hidden, we need to show it as a tooltip instead, so\n  // go find the text element in the DOM after rendering.\n  let textId = useId();\n  let [textContent, setTextContent] = useState('');\n  useLayoutEffect(() => {\n    if (hideButtonText) {\n      setTextContent(document.getElementById(textId)?.textContent);\n    }\n  }, [hideButtonText, item.rendered, textId]);\n\n  let button = (\n    // Use a PressResponder to send DOM props through.\n    // ActionButton doesn't allow overriding the role by default.\n    <PressResponder {...mergeProps(buttonProps, hoverProps)}>\n      <ClearSlots>\n        <SlotProvider\n          slots={{\n            text: {\n              id: hideButtonText ? textId : null,\n              isHidden: hideButtonText\n            }\n          }}>\n          <ActionButton\n            ref={ref}\n            UNSAFE_className={\n              classNames(\n                styles,\n                'spectrum-ActionGroup-item',\n                {\n                  'is-selected': isSelected,\n                  'is-hovered': isHovered,\n                  'spectrum-ActionGroup-item--iconOnly': hideButtonText,\n                  'spectrum-ActionGroup-item--isDisabled': isDisabled\n                },\n                classNames(\n                  buttonStyles,\n                  {\n                    'spectrum-ActionButton--emphasized': isEmphasized,\n                    'is-selected': isSelected\n                  }\n                )\n              )\n            }\n            isDisabled={isDisabled}\n            staticColor={staticColor}\n            aria-label={item['aria-label']}\n            aria-labelledby={item['aria-label'] == null && hideButtonText ? textId : undefined}>\n            {item.rendered}\n          </ActionButton>\n        </SlotProvider>\n      </ClearSlots>\n    </PressResponder>\n  );\n\n  if (hideButtonText && textContent) {\n    button = (\n      <TooltipTrigger placement={orientation === 'vertical' ? 'end' : 'top'}>\n        {button}\n        <Tooltip>{textContent}</Tooltip>\n      </TooltipTrigger>\n    );\n  }\n\n  if (item.wrapper) {\n    button = item.wrapper(button);\n  }\n\n  return button;\n}\n\ninterface ActionGroupMenuProps<T> extends AriaLabelingProps {\n  state: ListState<T>,\n  isDisabled?: boolean,\n  isEmphasized?: boolean,\n  staticColor?: 'white' | 'black',\n  items: Node<T>[],\n  hideButtonText?: boolean,\n  summaryIcon?: ReactNode,\n  isOnlyItem?: boolean,\n  orientation?: 'horizontal' | 'vertical',\n  onAction: (key: Key) => void\n}\n\nfunction ActionGroupMenu<T>({state, isDisabled, isEmphasized, staticColor, items, onAction, summaryIcon, hideButtonText, isOnlyItem, orientation, ...otherProps}: ActionGroupMenuProps<T>) {\n  // Use the key of the first item within the menu as the key of the button.\n  // The key must actually exist in the collection for focus to work correctly.\n  let key = items[0].key;\n  let {buttonProps} = useActionGroupItem({key}, state);\n\n  // The menu button shouldn't act like an actual action group item.\n  delete buttonProps.onPress;\n  delete buttonProps.role;\n  delete buttonProps['aria-checked'];\n\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  // If no aria-label or aria-labelledby is given, provide a default one.\n  let ariaLabel = otherProps['aria-label'] || (otherProps['aria-labelledby'] ? null : '…');\n  let ariaLabelledby = otherProps['aria-labelledby'];\n  let textId = useId();\n  let id = useId();\n\n  // Summary icon only applies when selection is enabled.\n  if (state.selectionManager.selectionMode === 'none') {\n    summaryIcon = null;\n  }\n\n  let iconOnly = false;\n\n  // If there is a selection, show the selected state on the menu button.\n  let isSelected = state.selectionManager.selectionMode !== 'none' && !state.selectionManager.isEmpty;\n\n  // If single selection and empty selection is not allowed, swap the contents of the button to the selected item (like a Picker).\n  if (!summaryIcon && state.selectionManager.selectionMode === 'single' && state.selectionManager.disallowEmptySelection) {\n    let selectedItem = state.collection.getItem(state.selectionManager.firstSelectedKey);\n    if (selectedItem) {\n      summaryIcon = selectedItem.rendered;\n      if (typeof summaryIcon === 'string') {\n        summaryIcon = <Text>{summaryIcon}</Text>;\n      }\n      iconOnly = hideButtonText;\n      ariaLabelledby = `${ariaLabelledby ?? id} ${textId}`;\n    }\n  }\n\n  if (summaryIcon) {\n    // If there's a custom summary icon, also add a chevron.\n    summaryIcon = (\n      <>\n        <ChevronDownMedium UNSAFE_className={classNames(styles, 'spectrum-ActionGroup-menu-chevron')} />\n        <span className={classNames(styles, 'spectrum-ActionGroup-menu-contents', {'spectrum-ActionGroup-item--iconOnly': iconOnly})}>\n          {summaryIcon}\n        </span>\n      </>\n    );\n  }\n\n  return (\n    // Use a PressResponder to send DOM props through.\n    <MenuTrigger align={isOnlyItem ? 'start' : 'end'} direction={orientation === 'vertical' ? 'end' : 'bottom'}>\n      <SlotProvider\n        slots={{\n          text: {\n            id: hideButtonText ? textId : null,\n            isHidden: hideButtonText,\n            UNSAFE_className: classNames(styles, 'spectrum-ActionGroup-menu-text')\n          }\n        }}>\n        <PressResponder {...mergeProps(buttonProps, hoverProps)}>\n          <ActionButton\n            {...otherProps}\n            id={id}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledby}\n            UNSAFE_className={\n              classNames(\n                styles,\n                'spectrum-ActionGroup-item',\n                'spectrum-ActionGroup-menu',\n                {\n                  'is-hovered': isHovered,\n                  'is-selected': isSelected\n                },\n                classNames(\n                  buttonStyles,\n                  {\n                    'is-selected': isSelected,\n                    'spectrum-ActionButton--emphasized': isEmphasized\n                  }\n                )\n              )\n            }\n            isDisabled={isDisabled}\n            staticColor={staticColor}>\n            {summaryIcon || <More />}\n          </ActionButton>\n        </PressResponder>\n      </SlotProvider>\n      <Menu\n        items={items}\n        disabledKeys={state.disabledKeys}\n        selectionMode={state.selectionManager.selectionMode}\n        selectedKeys={state.selectionManager.selectedKeys}\n        disallowEmptySelection={state.selectionManager.disallowEmptySelection}\n        onSelectionChange={(keys) => state.selectionManager.setSelectedKeys(keys)}\n        onAction={onAction}>\n        {node => <Item textValue={node.textValue}>{node.rendered}</Item>}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nfunction outerWidth(element: HTMLElement, ignoreLeftMargin: boolean, ignoreRightMargin: boolean) {\n  let style = window.getComputedStyle(element);\n  return element.offsetWidth + (ignoreLeftMargin ? 0 : toNumber(style.marginLeft)) + (ignoreRightMargin ? 0 : toNumber(style.marginRight));\n}\n\n\nfunction outerHeight(element: HTMLElement, ignoreTopMargin: boolean, ignoreBottomMargin: boolean) {\n  let style = window.getComputedStyle(element);\n  return element.offsetHeight + (ignoreTopMargin ? 0 : toNumber(style.marginTop)) + (ignoreBottomMargin ? 0 : toNumber(style.marginBottom));\n}\n\nfunction toNumber(value: string) {\n  let parsed = parseInt(value, 10);\n  return isNaN(parsed) ? 0 : parsed;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n"],"names":[],"version":3,"file":"main.js.map"}