{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAA,GAA+B;AAC/B,GAAiC;AACjC,GAAwC;AACxC,GAAuC;AACvC,GAAsC;AACtC,GAAsC;AACtC,GAAsC;AACtC,GAAuC;AACvC,GAAwC;AACxC,GAAkC;AAClC,GAAwC;AACxC,GAAyC;AACzC,GAAiC;AACjC,GAA6C;AAC7C,GAA4C;AAC5C,GAAgD;AAChD,GAAiD;AACjD,GAA0C;AAC1C,GAAiD;AACjD,GAAgD;AAChD,GAAmD;AACnD,GAAkD;AAClD,GAAkD;AAClD,GAAmD;AACnD,GAAmD;AACnD,GAAoD;AACpD,GAAmD;AACnD,GAAgD;AAChD,GAAgD;AAChD,GAA4C;AAC5C,GAA6C;AAC7C,GAA4C;AAC5C,GAA2C;AAC3C,GAA+C;AAC/C,GAAkD;AAClD,GAA4C;AAC5C,GAA2C;AAC3C,GAA4C;AAC5C,GAA2C;AAC3C,GAA6C;AAC7C,GAA2C;AAC3C,GAA0C;AAC1C,GAA2C;AAC3C,GAAsC;AACtC,GAA6C;AAC7C,GAA+C;AAC/C,GAA8C;AAC9C,GAA+C;AA/C/C,yCAA+B,GAAG,CAAsB;AACxD,yCAAiC,GAAG,CAAwB;AAC5D,yCAAwC,GAAG,CAA+B;AAC1E,yCAAuC,GAAG,CAA8B;AACxE,wCAAsC,GAAG,CAA6B;AACtE,yCAAsC,GAAG,CAA6B;AACtE,yCAAsC,GAAG,CAA6B;AACtE,yCAAuC,GAAG,CAA8B;AACxE,yCAAwC,GAAG,CAA+B;AAC1E,yCAAkC,GAAG,CAAyB;AAC9D,yCAAwC,GAAG,CAA+B;AAC1E,yCAAyC,GAAG,CAAgC;AAC5E,yCAAiC,GAAG,CAAwB;AAC5D,yCAA6C,GAAG,CAAoC;AACpF,yCAA4C,GAAG,CAAmC;AAClF,yCAAgD,GAAG,CAAuC;AAC1F,yCAAiD,GAAG,CAAwC;AAC5F,wCAA0C,GAAG,CAAiC;AAC9E,yCAAiD,GAAG,CAAwC;AAC5F,yCAAgD,GAAG,CAAuC;AAC1F,yCAAmD,GAAG,CAA0C;AAChG,yCAAkD,GAAG,CAAyC;AAC9F,yCAAkD,GAAG,CAAyC;AAC9F,yCAAmD,GAAG,CAA0C;AAChG,yCAAmD,GAAG,CAA0C;AAChG,yCAAoD,GAAG,CAA2C;AAClG,yCAAmD,GAAG,CAA0C;AAChG,yCAAgD,GAAG,CAAuC;AAC1F,wCAAgD,GAAG,CAAuC;AAC1F,yCAA4C,GAAG,CAAmC;AAClF,yCAA6C,GAAG,CAAoC;AACpF,yCAA4C,GAAG,CAAmC;AAClF,yCAA2C,GAAG,CAAkC;AAChF,yCAA+C,GAAG,CAAsC;AACxF,yCAAkD,GAAG,CAAyC;AAC9F,wCAA4C,GAAG,CAAmC;AAClF,yCAA2C,GAAG,CAAkC;AAChF,yCAA4C,GAAG,CAAmC;AAClF,yCAA2C,GAAG,CAAkC;AAChF,yCAA6C,GAAG,CAAoC;AACpF,yCAA2C,GAAG,CAAkC;AAChF,yCAA0C,GAAG,CAAiC;AAC9E,yCAA2C,GAAG,CAAkC;AAChF,yCAAsC,GAAG,CAA6B;AACtE,yCAA6C,GAAG,CAAoC;AACpF,yCAA+C,GAAG,CAAsC;AACxF,yCAA8C,GAAG,CAAqC;AACtF,yCAA+C,GAAG,CAAsC;;;;SDE/E,oCAAc,CAAC,KAAqB,EAAE,CAAC;IAC9C,MAAM,EAAE,wBAAwB,EAAE,KAAK,CAAC,YAAY;AACtD,CAAC;AAED,KAAK,CAAC,oCAAc,GAAkB,CAAC;OAClC,qBAAc;IACjB,KAAK,EAAE,CAAC;QAAA,CAAO;QAAE,oCAAc;IAAA,CAAC;AAClC,CAAC;SAKe,yCAAI,CAAC,KAAgB,EAAE,CAAC;IACtC,KAAK,GAAG,mBAAY,CAAC,KAAK,EAAE,CAAM;IAClC,GAAG,CAAC,CAAC,WACH,QAAQ,SACR,IAAI,GACJ,CAAY,aAAE,SAAS,GACvB,CAAa,cAAE,UAAU,MACtB,UAAU,CACf,CAAC,GAAG,KAAK;IACT,GAAG,CAAC,CAAC,aAAA,UAAU,EAAA,CAAC,GAAG,oBAAa,CAAC,UAAU,EAAE,oCAAc;IAE3D,GAAG,CAAC,QAAQ,GAAG,kBAAW;IAC1B,GAAG,CAAC,KAAK,GAAG,CAAG;IACf,EAAE,EAAE,QAAQ,KAAK,IAAI,EACnB,KAAK,GAAG,QAAQ,CAAC,KAAK,KAAK,CAAO,SAAG,CAAG,KAAG,CAAG;IAEhD,EAAE,GAAG,UAAU,EACb,UAAU,GAAG,SAAS;IAGxB,EAA2E,AAA3E,yEAA2E;IAC3E,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK;IAElC,MAAM,eAAC,YAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;WAChC,qBAAc,CAAC,UAAU;WACzB,UAAU;QACb,SAAS,EAAE,CAAO;QAClB,CAAY,aAAE,SAAS;QACvB,CAAa,cAAG,SAAS,GAAI,UAAU,IAAI,SAAS,GAAI,IAAI;QAC5D,IAAI,EAAE,CAAK;QACX,SAAS,EAAE,iBAAU,CACnB,gEAAM,EACN,QAAQ,CAAC,KAAK,CAAC,SAAS,EACxB,CAAe,iBACd,mBAAmB,EAAE,QAAQ,IAC9B,UAAU,CAAC,SAAS;IACxB,CAAC;AACH,CAAC;;;;;;;;;;;SEpEe,yCAAM,CAAC,KAAgB,EAAE,CAAC;IACxC,KAAK,GAAG,mBAAY,CAAC,KAAK,EAAE,CAAM;IAClC,GAAG,CAAC,CAAC,WACH,QAAQ,GACR,CAAY,aAAE,SAAS,GACvB,CAAa,cAAE,UAAU,MACtB,UAAU,CACf,CAAC,GAAG,KAAK;IAET,GAAG,CAAC,CAAC,aAAA,UAAU,EAAA,CAAC,GAAG,oBAAa,CAAC,UAAU;IAC3C,GAAG,CAAC,QAAQ,GAAG,kBAAW;IAC1B,GAAG,CAAC,KAAK,GAAG,CAAG;IACf,EAAE,EAAE,QAAQ,KAAK,IAAI,EACnB,KAAK,GAAG,QAAQ,CAAC,KAAK,KAAK,CAAO,SAAG,CAAG,KAAG,CAAG;IAGhD,EAAE,GAAG,UAAU,EACb,UAAU,GAAG,SAAS;IAGxB,MAAM,eAAC,YAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;WAChC,qBAAc,CAAC,UAAU;WACzB,UAAU;eACb,KAAK;QACL,SAAS,EAAE,CAAO;QAClB,CAAY,aAAE,SAAS;QACvB,CAAa,cAAG,SAAS,GAAI,UAAU,IAAI,SAAS,GAAI,IAAI;QAC5D,IAAI,EAAE,CAAK;QACX,SAAS,EAAE,iBAAU,CACnB,gEAAM,EACN,QAAQ,CAAC,KAAK,CAAC,SAAS,EACxB,CAAe,gBACf,CAAC;cACG,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAa,kBAAM,QAAQ,CAAC,IAAI,CAAC,CAAa;QAClF,CAAC,EACD,UAAU,CAAC,SAAS;IACxB,CAAC;AACH,CAAC;;","sources":["packages/@react-spectrum/icon/src/index.ts","packages/@react-spectrum/icon/src/Icon.tsx","packages/@adobe/spectrum-css-temp/components/icon/vars.css","packages/@react-spectrum/icon/src/UIIcon.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Icon';\nexport * from './UIIcon';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, IconColorValue, StyleProps} from '@react-types/shared';\nimport {baseStyleProps, classNames, StyleHandlers, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/icon/vars.css';\nimport {useProvider} from '@react-spectrum/provider';\n\ninterface IconProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * A screen reader only label for the Icon.\n   */\n  'aria-label'?: string,\n  /**\n   * The content to display. Should be an SVG.\n   */\n  children: ReactElement,\n  /**\n   * Size of Icon (changes based on scale).\n   */\n  size?: 'XXS' | 'XS' | 'S' | 'M' | 'L' |'XL' | 'XXL',\n  /**\n   * A slot to place the icon in.\n   * @default 'icon'\n   */\n  slot?: string,\n  /**\n   * Indicates whether the element is exposed to an accessibility API.\n   */\n  'aria-hidden'?: boolean | 'false' | 'true',\n  /**\n   * Color of the Icon.\n   */\n  color?: IconColorValue\n}\n\nexport type IconPropsWithoutChildren = Omit<IconProps, 'children'>;\n\nfunction iconColorValue(value: IconColorValue) {\n  return `var(--spectrum-semantic-${value}-color-icon)`;\n}\n\nconst iconStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  color: ['color', iconColorValue]\n};\n\n/**\n * Spectrum icons are clear, minimal, and consistent across platforms. They follow the focused and rational principles of the design system in both metaphor and style.\n */\nexport function Icon(props: IconProps) {\n  props = useSlotProps(props, 'icon');\n  let {\n    children,\n    size,\n    'aria-label': ariaLabel,\n    'aria-hidden': ariaHidden,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, iconStyleProps);\n\n  let provider = useProvider();\n  let scale = 'M';\n  if (provider !== null) {\n    scale = provider.scale === 'large' ? 'L' : 'M';\n  }\n  if (!ariaHidden) {\n    ariaHidden = undefined;\n  }\n\n  // Use user specified size, falling back to provider scale if size is undef\n  let iconSize = size ? size : scale;\n\n  return React.cloneElement(children, {\n    ...filterDOMProps(otherProps),\n    ...styleProps,\n    focusable: 'false',\n    'aria-label': ariaLabel,\n    'aria-hidden': (ariaLabel ? (ariaHidden || undefined) : true),\n    role: 'img',\n    className: classNames(\n      styles,\n      children.props.className,\n      'spectrum-Icon',\n      `spectrum-Icon--size${iconSize}`,\n      styleProps.className)\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, StyleProps} from '@react-types/shared';\nimport {classNames, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/icon/vars.css';\nimport {useProvider} from '@react-spectrum/provider';\n\ninterface IconProps extends DOMProps, AriaLabelingProps, StyleProps {\n  children: ReactElement,\n  slot?: string,\n  /**\n   * Indicates whether the element is exposed to an accessibility API.\n   */\n  'aria-hidden'?: boolean | 'false' | 'true'\n}\n\nexport type UIIconPropsWithoutChildren = Omit<IconProps, 'children'>;\n\nexport function UIIcon(props: IconProps) {\n  props = useSlotProps(props, 'icon');\n  let {\n    children,\n    'aria-label': ariaLabel,\n    'aria-hidden': ariaHidden,\n    ...otherProps\n  } = props;\n\n  let {styleProps} = useStyleProps(otherProps);\n  let provider = useProvider();\n  let scale = 'M';\n  if (provider !== null) {\n    scale = provider.scale === 'large' ? 'L' : 'M';\n  }\n\n  if (!ariaHidden) {\n    ariaHidden = undefined;\n  }\n\n  return React.cloneElement(children, {\n    ...filterDOMProps(otherProps),\n    ...styleProps,\n    scale,\n    focusable: 'false',\n    'aria-label': ariaLabel,\n    'aria-hidden': (ariaLabel ? (ariaHidden || undefined) : true),\n    role: 'img',\n    className: classNames(\n      styles,\n      children.props.className,\n      'spectrum-Icon',\n      {\n        [`spectrum-UIIcon-${children.type['displayName']}`]: children.type['displayName']\n      },\n      styleProps.className)\n  });\n}\n"],"names":[],"version":3,"file":"module.js.map"}