{"mappings":"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","sources":["packages/@react-stately/tooltip/src/index.ts","packages/@react-stately/tooltip/src/useTooltipTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTooltipTriggerState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {useEffect, useMemo, useRef} from 'react';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\n\nconst TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\nconst TOOLTIP_COOLDOWN = 500;\n\nexport interface TooltipTriggerState {\n  /** Whether the tooltip is currently showing. */\n  isOpen: boolean,\n  /**\n   * Shows the tooltip. By default, the tooltip becomes visible after a delay\n   * depending on a global warmup timer. The `immediate` option shows the\n   * tooltip immediately instead.\n   */\n  open(immediate?: boolean): void,\n  /** Hides the tooltip. */\n  close(immediate?: boolean): void\n}\n\nlet tooltips = {};\nlet tooltipId = 0;\nlet globalWarmedUp = false;\nlet globalWarmUpTimeout = null;\nlet globalCooldownTimeout = null;\n\n/**\n * Manages state for a tooltip trigger. Tracks whether the tooltip is open, and provides\n * methods to toggle this state. Ensures only one tooltip is open at a time and controls\n * the delay for showing a tooltip.\n */\nexport function useTooltipTriggerState(props: TooltipTriggerProps = {}): TooltipTriggerState {\n  let {delay = TOOLTIP_DELAY} = props;\n  let {isOpen, open, close} = useOverlayTriggerState(props);\n  let id = useMemo(() => `${++tooltipId}`, []);\n  let closeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  let ensureTooltipEntry = () => {\n    tooltips[id] = hideTooltip;\n  };\n\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in tooltips) {\n      if (hideTooltipId !== id) {\n        tooltips[hideTooltipId](true);\n        delete tooltips[hideTooltipId];\n      }\n    }\n  };\n\n  let showTooltip = () => {\n    clearTimeout(closeTimeout.current);\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    globalWarmedUp = true;\n    open();\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalCooldownTimeout) {\n      clearTimeout(globalCooldownTimeout);\n      globalCooldownTimeout = null;\n    }\n  };\n\n  let hideTooltip = (immediate?: boolean) => {\n    if (immediate) {\n      clearTimeout(closeTimeout.current);\n      closeTimeout.current = null;\n      close();\n    } else if (!closeTimeout.current) {\n      closeTimeout.current = setTimeout(() => {\n        closeTimeout.current = null;\n        close();\n      }, TOOLTIP_COOLDOWN);\n    }\n\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalWarmedUp) {\n      if (globalCooldownTimeout) {\n        clearTimeout(globalCooldownTimeout);\n      }\n      globalCooldownTimeout = setTimeout(() => {\n        delete tooltips[id];\n        globalCooldownTimeout = null;\n        globalWarmedUp = false;\n      }, TOOLTIP_COOLDOWN);\n    }\n  };\n\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !globalWarmUpTimeout && !globalWarmedUp) {\n      globalWarmUpTimeout = setTimeout(() => {\n        globalWarmUpTimeout = null;\n        globalWarmedUp = true;\n        showTooltip();\n      }, delay);\n    } else if (!isOpen) {\n      showTooltip();\n    }\n  };\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(closeTimeout.current);\n      let tooltip = tooltips[id];\n      if (tooltip) {\n        delete tooltips[id];\n      }\n    };\n  }, [id]);\n\n  return {\n    isOpen,\n    open: (immediate) => {\n      if (!immediate && delay > 0 && !closeTimeout.current) {\n        warmupTooltip();\n      } else {\n        showTooltip();\n      }\n    },\n    close: hideTooltip\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}