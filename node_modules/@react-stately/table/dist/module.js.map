{"mappings":"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","sources":["packages/@react-stately/table/src/index.ts","packages/@react-stately/table/src/useTableState.ts","packages/@react-stately/table/src/TableCollection.ts","packages/@react-stately/table/src/TableHeader.ts","packages/@react-stately/table/src/TableBody.ts","packages/@react-stately/table/src/Column.ts","packages/@react-stately/table/src/Row.ts","packages/@react-stately/table/src/Cell.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTableState';\nexport * from './TableHeader';\nexport * from './TableBody';\nexport * from './Column';\nexport * from './Row';\nexport * from './Cell';\nexport {Section} from '@react-stately/collections';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, Node, SelectionMode, Sortable, SortDescriptor, SortDirection} from '@react-types/shared';\nimport {GridState, useGridState} from '@react-stately/grid';\nimport {TableCollection as ITableCollection} from '@react-types/table';\nimport {Key, useMemo} from 'react';\nimport {MultipleSelectionStateProps} from '@react-stately/selection';\nimport {TableCollection} from './TableCollection';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface TableState<T> extends GridState<T, ITableCollection<T>> {\n  /** A collection of rows and columns in the table. */\n  collection: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes: boolean,\n  /** The current sorted column and direction. */\n  sortDescriptor: SortDescriptor,\n  /** Calls the provided onSortChange handler with the provided column key and sort direction. */\n  sort(columnKey: Key): void\n}\n\nexport interface CollectionBuilderContext<T> {\n  showSelectionCheckboxes: boolean,\n  selectionMode: SelectionMode,\n  columns: Node<T>[]\n}\n\nexport interface TableStateProps<T> extends CollectionBase<T>, MultipleSelectionStateProps, Sortable {\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes?: boolean\n}\n\nconst OPPOSITE_SORT_DIRECTION = {\n  ascending: 'descending' as SortDirection,\n  descending: 'ascending' as SortDirection\n};\n\n/**\n * Provides state management for a table component. Handles building a collection\n * of columns and rows from props. In addition, it tracks row selection and manages sort order changes.\n */\nexport function useTableState<T extends object>(props: TableStateProps<T>): TableState<T>  {\n  let {selectionMode = 'none'} = props;\n\n  let context = useMemo(() => ({\n    showSelectionCheckboxes: props.showSelectionCheckboxes && selectionMode !== 'none',\n    selectionMode,\n    columns: []\n  }), [props.children, props.showSelectionCheckboxes, selectionMode]);\n\n  let collection = useCollection<T, TableCollection<T>>(\n    props,\n    (nodes, prev) => new TableCollection(nodes, prev, context),\n    context\n  );\n  let {disabledKeys, selectionManager} = useGridState({...props, collection});\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor,\n    sort(columnKey: Key) {\n      props.onSortChange({\n        column: columnKey,\n        direction: props.sortDescriptor?.column === columnKey\n          ? OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction]\n          : 'ascending'\n      });\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {GridCollection} from '@react-stately/grid';\nimport {GridNode} from '@react-types/grid';\nimport {Key} from 'react';\n\ninterface GridCollectionOptions {\n  showSelectionCheckboxes?: boolean\n}\n\nconst ROW_HEADER_COLUMN_KEY = 'row-header-column-' + Math.random().toString(36).slice(2);\n\nfunction buildHeaderRows<T>(keyMap: Map<Key, GridNode<T>>, columnNodes: GridNode<T>[]): GridNode<T>[] {\n  let columns = [];\n  let seen = new Map();\n  for (let column of columnNodes) {\n    let parentKey = column.parentKey;\n    let col = [column];\n\n    while (parentKey) {\n      let parent: GridNode<T> = keyMap.get(parentKey);\n\n      // If we've already seen this parent, than it is shared\n      // with a previous column. If the current column is taller\n      // than the previous column, than we need to shift the parent\n      // in the previous column so it's level with the current column.\n      if (seen.has(parent)) {\n        parent.colspan++;\n\n        let {column, index} = seen.get(parent);\n        if (index > col.length) {\n          break;\n        }\n\n        for (let i = index; i < col.length; i++) {\n          column.splice(i, 0, null);\n        }\n\n        // Adjust shifted indices\n        for (let i = col.length; i < column.length; i++) {\n          if (column[i] && seen.has(column[i])) {\n            seen.get(column[i]).index = i;\n          }\n        }\n      } else {\n        parent.colspan = 1;\n        col.push(parent);\n        seen.set(parent, {column: col, index: col.length - 1});\n      }\n\n      parentKey = parent.parentKey;\n    }\n\n    columns.push(col);\n    column.index = columns.length - 1;\n  }\n\n  let maxLength = Math.max(...columns.map(c => c.length));\n  let headerRows = Array(maxLength).fill(0).map(() => []);\n\n  // Convert columns into rows.\n  let colIndex = 0;\n  for (let column of columns) {\n    let i = maxLength - 1;\n    for (let item of column) {\n      if (item) {\n        // Fill the space up until the current column with a placeholder\n        let row = headerRows[i];\n        let rowLength = row.reduce((p, c) => p + c.colspan, 0);\n        if (rowLength < colIndex) {\n          let placeholder: GridNode<T> = {\n            type: 'placeholder',\n            key: 'placeholder-' + item.key,\n            colspan: colIndex - rowLength,\n            index: rowLength,\n            value: null,\n            rendered: null,\n            level: i,\n            hasChildNodes: false,\n            childNodes: [],\n            textValue: null\n          };\n\n          if (row.length > 0) {\n            row[row.length - 1].nextKey = placeholder.key;\n            placeholder.prevKey = row[row.length - 1].key;\n          }\n\n          row.push(placeholder);\n        }\n\n        if (row.length > 0) {\n          row[row.length - 1].nextKey = item.key;\n          item.prevKey = row[row.length - 1].key;\n        }\n\n        item.level = i;\n        item.index = colIndex;\n        row.push(item);\n      }\n\n      i--;\n    }\n\n    colIndex++;\n  }\n\n  // Add placeholders at the end of each row that is shorter than the maximum\n  let i = 0;\n  for (let row of headerRows) {\n    let rowLength = row.reduce((p, c) => p + c.colspan, 0);\n    if (rowLength < columnNodes.length) {\n      let placeholder: GridNode<T> = {\n        type: 'placeholder',\n        key: 'placeholder-' + row[row.length - 1].key,\n        colspan: columnNodes.length - rowLength,\n        index: rowLength,\n        value: null,\n        rendered: null,\n        level: i,\n        hasChildNodes: false,\n        childNodes: [],\n        textValue: null,\n        prevKey: row[row.length - 1].key\n      };\n\n      row.push(placeholder);\n    }\n\n    i++;\n  }\n\n  return headerRows.map((childNodes, index) => {\n    let row: GridNode<T> = {\n      type: 'headerrow',\n      key: 'headerrow-' + index,\n      index,\n      value: null,\n      rendered: null,\n      level: 0,\n      hasChildNodes: true,\n      childNodes,\n      textValue: null\n    };\n\n    return row;\n  });\n}\n\nexport class TableCollection<T> extends GridCollection<T> {\n  headerRows: GridNode<T>[];\n  columns: GridNode<T>[];\n  rowHeaderColumnKeys: Set<Key>;\n  body: GridNode<T>;\n\n  constructor(nodes: Iterable<GridNode<T>>, prev?: TableCollection<T>, opts?: GridCollectionOptions) {\n    let rowHeaderColumnKeys: Set<Key> = new Set();\n    let body: GridNode<T>;\n    let columns = [];\n\n    // Add cell for selection checkboxes if needed.\n    if (opts?.showSelectionCheckboxes) {\n      let rowHeaderColumn: GridNode<T> = {\n        type: 'column',\n        key: ROW_HEADER_COLUMN_KEY,\n        value: null,\n        textValue: '',\n        level: 0,\n        index: 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isSelectionCell: true\n        }\n      };\n\n      columns.unshift(rowHeaderColumn);\n    }\n\n    let rows = [];\n    let columnKeyMap = new Map();\n    let visit = (node: GridNode<T>) => {\n      switch (node.type) {\n        case 'body':\n          body = node;\n          break;\n        case 'column':\n          columnKeyMap.set(node.key, node);\n          if (!node.hasChildNodes) {\n            columns.push(node);\n\n            if (node.props.isRowHeader) {\n              rowHeaderColumnKeys.add(node.key);\n            }\n          }\n          break;\n        case 'item':\n          rows.push(node);\n          return; // do not go into childNodes\n      }\n      for (let child of node.childNodes) {\n        visit(child);\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n    let headerRows = buildHeaderRows(columnKeyMap, columns) as GridNode<T>[];\n    headerRows.forEach((row, i) => rows.splice(i, 0, row));\n\n    super({\n      columnCount: columns.length,\n      items: rows,\n      visitNode: node => {\n        node.column = columns[node.index];\n        return node;\n      }\n    });\n    this.columns = columns;\n    this.rowHeaderColumnKeys = rowHeaderColumnKeys;\n    this.body = body;\n    this.headerRows = headerRows;\n\n    // Default row header column to the first one.\n    if (this.rowHeaderColumnKeys.size === 0) {\n      this.rowHeaderColumnKeys.add(this.columns[opts?.showSelectionCheckboxes ? 1 : 0].key);\n    }\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.body.childNodes;\n  }\n\n  get size() {\n    return [...this.body.childNodes].length;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return [...this.body.childNodes][0]?.key;\n  }\n\n  getLastKey() {\n    let rows = [...this.body.childNodes];\n    return rows[rows.length - 1]?.key;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from '@react-stately/collections';\nimport React, {ReactElement} from 'react';\nimport {TableHeaderProps} from '@react-types/table';\n\nfunction TableHeader<T>(props: TableHeaderProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableHeader.getCollectionNode = function* getCollectionNode<T>(props: TableHeaderProps<T>): Generator<PartialNode<T>, void, any> {\n  let {children, columns} = props;\n  if (typeof children === 'function') {\n    if (!columns) {\n      throw new Error('props.children was a function but props.columns is missing');\n    }\n\n    for (let column of columns) {\n      yield {\n        type: 'column',\n        value: column,\n        renderer: children\n      };\n    }\n  } else {\n    let columns: PartialNode<T>[] = [];\n    React.Children.forEach(children, column => {\n      columns.push({\n        type: 'column',\n        element: column\n      });\n    });\n\n    yield* columns;\n  }\n};\n\n/**\n * A TableHeader is a container for the Column elements in a Table. Columns can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `columns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableHeader = TableHeader as <T>(props: TableHeaderProps<T>) => JSX.Element;\nexport {_TableHeader as TableHeader};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from '@react-stately/collections';\nimport React, {ReactElement} from 'react';\nimport {TableBodyProps} from '@react-types/table';\n\nfunction TableBody<T>(props: TableBodyProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableBody.getCollectionNode = function* getCollectionNode<T>(props: TableBodyProps<T>): Generator<PartialNode<T>> {\n  let {children, items} = props;\n  yield {\n    type: 'body',\n    hasChildNodes: true,\n    props,\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, item => {\n          items.push({\n            type: 'item',\n            element: item\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n/**\n * A TableBody is a container for the Row elements of a Table. Rows can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `items` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableBody = TableBody as <T>(props: TableBodyProps<T>) => JSX.Element;\nexport {_TableBody as TableBody};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {ColumnProps} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {ReactElement} from 'react';\n\nfunction Column<T>(props: ColumnProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nColumn.getCollectionNode = function* getCollectionNode<T>(props: ColumnProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, GridNode<T>[]> {\n  let {title, children, childColumns} = props;\n\n  let rendered = title || children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'];\n\n  let fullNodes = yield {\n    type: 'column',\n    hasChildNodes: !!childColumns || (title && React.Children.count(children) > 0),\n    rendered,\n    textValue,\n    props,\n    *childNodes() {\n      if (childColumns) {\n        for (let child of childColumns) {\n          yield {\n            type: 'column',\n            value: child\n          };\n        }\n      } else if (title) {\n        let childColumns: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          childColumns.push({\n            type: 'column',\n            element: child as ReactElement<ColumnProps<T>>\n          });\n        });\n\n        yield* childColumns;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // This is a bit of a hack, but it works.\n      // If this method is called, then there's a cached version of this node available.\n      // But, we need to keep the list of columns in the new context up to date.\n      updateContext(newContext);\n      return false;\n    }\n  };\n\n  let updateContext = (context: CollectionBuilderContext<T>) => {\n    // register leaf columns on the context so that <Row> can access them\n    for (let node of fullNodes) {\n      if (!node.hasChildNodes) {\n        context.columns.push(node);\n      }\n    }\n  };\n\n  updateContext(context);\n};\n\n/**\n * A Column represents a field of each item within a Table. Columns may also contain nested\n * Column elements to represent column groups. Nested columns can be statically defined as\n * children, or dynamically generated using a function based on the `childColumns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Column = Column as <T>(props: ColumnProps<T>) => JSX.Element;\nexport {_Column as Column};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {ReactElement} from 'react';\nimport {RowProps} from '@react-types/table';\n\nfunction Row(props: RowProps): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nRow.getCollectionNode = function* getCollectionNode<T>(props: RowProps, context: CollectionBuilderContext<T>): Generator<PartialNode<T>> {\n  let {children, textValue} = props;\n\n  yield {\n    type: 'item',\n    props: props,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: true,\n    *childNodes() {\n      // Process cells first\n      if (context.showSelectionCheckboxes && context.selectionMode !== 'none') {\n        yield {\n          type: 'cell',\n          key: 'header', // this is combined with the row key by CollectionBuilder\n          props: {\n            isSelectionCell: true\n          }\n        };\n      }\n\n      if (typeof children === 'function') {\n        for (let column of context.columns) {\n          yield {\n            type: 'cell',\n            element: children(column.key),\n            key: column.key // this is combined with the row key by CollectionBuilder\n          };\n        }\n      } else {\n        let cells: PartialNode<T>[] = [];\n        React.Children.forEach(children, cell => {\n          cells.push({\n            type: 'cell',\n            element: cell\n          });\n        });\n\n        if (cells.length !== context.columns.length) {\n          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);\n        }\n\n        yield* cells;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // Invalidate all rows if the columns changed.\n      return newContext.columns.length !== context.columns.length ||\n        newContext.columns.some((c, i) => c.key !== context.columns[i].key) ||\n        newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes ||\n        newContext.selectionMode !== context.selectionMode;\n    }\n  };\n};\n\n/**\n * A Row represents a single item in a Table and contains Cell elements for each column.\n * Cells can be statically defined as children, or generated dynamically using a function\n * based on the columns defined in the TableHeader.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Row = Row as (props: RowProps) => JSX.Element;\nexport {_Row as Row};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CellProps} from '@react-types/table';\nimport {PartialNode} from '@react-stately/collections';\nimport {ReactElement} from 'react';\n\nfunction Cell(props: CellProps): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nCell.getCollectionNode = function* getCollectionNode<T>(props: CellProps): Generator<PartialNode<T>> {\n  let {children} = props;\n\n  let textValue = props.textValue || (typeof children === 'string' ? children : '') || props['aria-label'] || '';\n  yield {\n    type: 'cell',\n    props: props,\n    rendered: children,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false\n  };\n};\n\n/**\n * A Cell represents the value of a single Column within a Table Row.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Cell = Cell as (props: CellProps) => JSX.Element;\nexport {_Cell as Cell};\n"],"names":[],"version":3,"file":"module.js.map"}